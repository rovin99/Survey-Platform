apiVersion: batch/v1
kind: Job
metadata:
  name: auth-service-seeder
  namespace: default
  labels:
    app: auth-service
    component: seeder
spec:
  template:
    metadata:
      labels:
        app: auth-service
        component: seeder
    spec:
      containers:
      - name: seeder
        # Use the same image with a different command
        image: rovin123/auth-service:v1
        
        # Run a custom seeding command
        command: ["/bin/sh"]
        args:
          - -c
          - |
            # Create a simple seeding script
            cat > /tmp/seed.cs << 'EOF'
            using AuthService.Models;
            using Microsoft.EntityFrameworkCore;
            using Microsoft.Extensions.DependencyInjection;
            using Microsoft.Extensions.Hosting;
            
            var builder = Host.CreateApplicationBuilder(args);
            builder.Services.AddDbContext<AppDbContext>(options =>
                options.UseNpgsql(Environment.GetEnvironmentVariable("CONNECTION_STRING")));
            
            var host = builder.Build();
            using var scope = host.Services.CreateScope();
            await DatabaseSeeder.SeedRolesAndUsers(scope.ServiceProvider);
            Console.WriteLine("Database seeding completed!");
            EOF
            
            # Run the seeding script
            dotnet script /tmp/seed.cs
        
        # Load environment variables
        envFrom:
          - configMapRef:
              name: auth-service-config
          - secretRef:
              name: auth-service-secrets
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
            
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        
  backoffLimit: 2
  ttlSecondsAfterFinished: 300 